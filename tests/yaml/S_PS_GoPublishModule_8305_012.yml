template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_PS_GPM_8305_012_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_PowerShell.path }}
      branches:
        include: {{gitBranch}}

  - name: S_PS_GoPublishModule_8305_012_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory

pipelines:
  - name: pipeline_S_PS_GoPublishModule_8305_012
    configuration:
      nodePool: win_2019
      jfrogCliVersion: 2
    steps:
      - name: S_PS_GoPublishModule_8305_012_1
        type: GoPublishModule
        configuration:
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_PS_GPM_8305_012_GitRepo
          outputResources:
            - name: S_PS_GoPublishModule_8305_012_BuildInfo
          version: "v1.830512.${run_number}"
          targetRepository: test-automation-go-local
          autoPublishBuildInfo: false
          sourceLocation: "tests/Go"
      - name: S_PS_GoPublishModule_8305_012_2
        type: PowerShell
        configuration:
          inputResources:
            - name: S_PS_GoPublishModule_8305_012_BuildInfo
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - jfrog rt curl -XGET /api/build/${JFROG_CLI_BUILD_NAME}/${JFROG_CLI_BUILD_NUMBER} -o ${step_tmp_dir}/response
            - |
              $buildInfo = (Get-Content "${step_tmp_dir}\response" | ConvertFrom-JSON).buildInfo
              if ( $buildInfo ) { throw "Build info found" }
            - |
              $jfrogPath = Join-Path ([System.IO.Path]::GetTempPath()) "jfrog"
              restore_run_files jfrog $jfrogPath
            - Invoke-Expression "$jfrog_cli_path rt build-publish $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER --insecure-tls=${no_verify_ssl}"
            - jfrog rt curl -XGET /api/build/${JFROG_CLI_BUILD_NAME}/${JFROG_CLI_BUILD_NUMBER} -o ${step_tmp_dir}/response
            - jfrog rt curl -XDELETE "/api/build/${JFROG_CLI_BUILD_NAME}?buildNumbers=${JFROG_CLI_BUILD_NUMBER}&artifacts=1"
            - |
              $myModuleCount = ((Get-Content ${step_tmp_dir}\response | ConvertFrom-Json).buildInfo.modules | Where-Object {$_.id -eq "go.service"} | Measure-Object).Count
              if ( $myModuleCount -ne 1 ) { throw "Module not found in build info"}
