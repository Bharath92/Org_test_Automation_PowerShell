pipelines:
  - name: pipelines_S_PS_I_Artifactory_0005
    steps:
      - name: S_PS_I_Artifactory_0005
        type: PowerShell
        configuration:
          nodePool: win_2019
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - |
              $artifactory_url = [System.Uri]$int_s_artifactory_url
              $artifactory_registry_host = $artifactory_url.Host
              $artifactory_registry_port = $artifactory_url.Port
              if ($artifactory_registry_port -eq 80) {
                add_run_variables artifactory_registry_url="${artifactory_registry_host}"
              } else {
                add_run_variables artifactory_registry_url="${artifactory_registry_host}:${artifactory_registry_port}"
              }
              add_run_variables imageName="${artifactory_registry_url}/test-automation-docker-local/s_ps_i_artifactory_0005"
              add_run_variables imageTag="${run_id}"
              Set-Content -Path Dockerfile -Value "FROM releases-docker.jfrog.io/jfrog/pipelines-w19dotnetcore:3"
              docker build --rm=true -t ${imageName}:${imageTag} .
              jfrog rt docker-push ${imageName}:${imageTag} test-automation-docker-local
              docker rmi ${imageName}:${imageTag}
              jfrog rt docker-pull ${imageName}:${imageTag} test-automation-docker-local
              docker inspect ${imageName}:${imageTag}
              if ( $LASTEXITCODE -ne 0 ) { throw "docker inspect failed" }