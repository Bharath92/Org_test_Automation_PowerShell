template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_PS_DockerBuild_8307_001_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_bash.path }}
      branches:
        include: {{gitBranch}}

pipelines:
  - name: pipeline_S_PS_DockerBuild_8307_001
    configuration:
      jfrogCliVersion: 2
      nodePool: win_2019
    steps:
      - name: S_PS_DockerBuild_8307_001_1
        type: DockerBuild
        configuration:
          affinityGroup: S_PS_DockerBuild_8307_001
          dockerImageName: ${artifactory_registry_url}/test-automation-docker-local/s_ps_dockerbuild_8307
          dockerImageTag: ${run_id}
          inputResources:
            - name: S_PS_DockerBuild_8307_001_GitRepo
          integrations:
            - name: s_artifactory
        execution:
          onStart:
            - add_run_variables JFROG_CLI_BUILD_NUMBER=${run_id}
            - |
              $artifactory_url = [System.Uri]$int_s_artifactory_url
              $artifactory_registry_host = $artifactory_url.Host
              $artifactory_registry_port = $artifactory_url.Port
              if ($artifactory_registry_port -eq 80) {
                add_run_variables artifactory_registry_url="${artifactory_registry_host}"
              } else {
                add_run_variables artifactory_registry_url="${artifactory_registry_host}:${artifactory_registry_port}"
              }
            - Push-Location $res_S_PS_DockerBuild_8307_001_GitRepo_resourcePath
            - Set-Content -Path './Dockerfile' -Value 'FROM mcr.microsoft.com/windows/nanoserver:1809'

      - name: S_PS_DockerBuild_8307_001_2
        type: PowerShell
        configuration:
          affinityGroup: S_PS_DockerBuild_8307_001
          inputSteps:
            - name: S_PS_DockerBuild_8307_001_1
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - docker rmi "${artifactory_registry_url}/test-automation-docker-local/s_ps_dockerbuild_8307:${run_id}" || true
            - if ( "${buildStepName}" -ne "S_PS_DockerBuild_8307_001_1" ) { throw "Wrong buildStepName" }
            - if ( "${S_PS_DockerBuild_8307_001_1_payloadType}" -ne "docker" ) { throw "Wrong payloadType" }
            - if ( "${S_PS_DockerBuild_8307_001_1_buildNumber}" -ne "${JFROG_CLI_BUILD_NUMBER}" ) { throw "Wrong buildNumber" }
            - if ( "${S_PS_DockerBuild_8307_001_1_buildName}" -ne "${JFROG_CLI_BUILD_NAME}" ) { throw "Wrong buildName" }
            - if ( "${S_PS_DockerBuild_8307_001_1_isPromoted}" -ne "false" ) { throw "Wrong isPromoted" }
            - if ( "${S_PS_DockerBuild_8307_001_1_dockerImageName}" -ne "${artifactory_registry_url}/test-automation-docker-local/s_ps_dockerbuild_8307" ) { throw "Wrong dockerImageName" }
            - if ( "${S_PS_DockerBuild_8307_001_1_dockerImageTag}" -ne "${run_id}" ) { throw "Wrong dockerImageTag" }
            - restore_run_files jfrog jfrog
            - if ( -not ( Test-Path "jfrog/builds" -Type Container ) ) { throw "Build info not found" }
