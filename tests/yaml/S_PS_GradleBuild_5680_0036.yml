template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_PS_GradleBuild_5680_0036_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_PowerShell.path }}
      branches:
        include: {{gitBranch}}

pipelines:
  - name: pipeline_S_PS_GradleBuild_5680_0036
    configuration:
      nodePool: win_2019
    steps:
      - name: S_PS_GradleBuild_5680_0036_1
        type: GradleBuild
        configuration:
          environmentVariables:
            use_wrapper: "true"
          inputResources:
            - name: S_PS_GradleBuild_5680_0036_GitRepo
          integrations:
            - name: s_artifactory
          useWrapper: "${use_wrapper}"
          resolverRepo: test-automation-gradle-remote
          deployerRepo: test-automation-gradle-local
          sourceLocation: "tests/gradleWithWrapper"
          gradleCommand: "hello"
        execution:
          onStart:
            - add_run_variables JFROG_CLI_BUILD_NUMBER=${run_id}
          onSuccess:
            - |
              $ymlPath = Join-Path ( find_resource_variable $inputGitRepoResourceName resourcePath ) ( Join-Path ( find_step_configuration_value sourceLocation ) ".jfrog/projects/gradle.yaml" )
              $wrapper = Select-String -Path $ymlPath -Pattern "useWrapper: true" -Quiet
              echo "$wrapper"
              if ( -not $wrapper) { throw "TEST FAILED" }
              add_run_variables TEST_SUCCESS=true
      - name: S_PS_GradleBuild_5680_0036_2
        type: PowerShell
        configuration:
          inputSteps:
            - name: S_PS_GradleBuild_5680_0036_1
        execution:
          onExecute:
            - if ( "$TEST_SUCCESS" -ne "true" ) { throw "Test failed"}
