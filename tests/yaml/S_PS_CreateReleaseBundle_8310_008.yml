resources:
  - name: S_PS_CreateReleaseBundle_8310_008_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: 'name'
      buildNumber: '1'

  - name: S_PS_CreateReleaseBundle_8310_008_ReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: s_distribution
      name: name
      version: '1'

pipelines:
  - name: pipeline_S_PS_CreateReleaseBundle_8310_008
    configuration:
      nodePool: win_2019
      jfrogCliVersion: 2
    steps:
      - name: S_PS_CreateReleaseBundle_8310_008_1
        type: PowerShell
        configuration:
          integrations:
            - name: s_artifactory
          outputResources:
            - name: S_PS_CreateReleaseBundle_8310_008_BuildInfo
        execution:
          onExecute:
            - add_run_variables JFROG_CLI_BUILD_NUMBER=${run_id}
            - Set-Content -Path S_PS_CreateReleaseBundle_8310_008.txt -Value ${run_id}
            - jfrog rt upload S_PS_CreateReleaseBundle_8310_008.txt test-automation-generic-local --insecure-tls=$no_verify_ssl
            - jfrog rt build-publish --insecure-tls=${no_verify_ssl} ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER}
            - write_output S_PS_CreateReleaseBundle_8310_008_BuildInfo buildName="${JFROG_CLI_BUILD_NAME}" buildNumber="${JFROG_CLI_BUILD_NUMBER}"

      - name: S_PS_CreateReleaseBundle_8310_008_2
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: ${JFROG_CLI_BUILD_NAME}
          releaseBundleVersion: ${run_id}
          dryRun: false
          releaseNotes:
            syntax: markdown
            content: "My *Release Notes*"
          inputResources:
            - name: S_PS_CreateReleaseBundle_8310_008_BuildInfo
          outputResources:
            - name: S_PS_CreateReleaseBundle_8310_008_ReleaseBundle

      - name: S_PS_CreateReleaseBundle_8310_008_3
        type: PowerShell
        configuration:
          inputResources:
            - name: S_PS_CreateReleaseBundle_8310_008_ReleaseBundle
          integrations:
            - name: s_artifactory
            - name: s_distribution
        execution:
          onExecute:
            - |
              $releaseBundleName = find_resource_variable S_PS_CreateReleaseBundle_8310_008_ReleaseBundle name
              $releaseBundleVersion = find_resource_variable S_PS_CreateReleaseBundle_8310_008_ReleaseBundle version
              $distributionUrl = $res_S_PS_CreateReleaseBundle_8310_008_ReleaseBundle_sourceDistribution_url
              $encoded_auth = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("${res_S_PS_CreateReleaseBundle_8310_008_ReleaseBundle_sourceDistribution_user}:${res_S_PS_CreateReleaseBundle_8310_008_ReleaseBundle_sourceDistribution_apikey}"))
              check_no_verify_ssl
              $headers = @{'Authorization' = "Basic $encoded_auth";'Content-Type' = "application/json"}
              $releaseBundle = Invoke-RestMethod "${distributionUrl}/api/v1/release_bundle/${releaseBundleName}/${releaseBundleVersion}" -Method Get -Headers $headers -TimeoutSec 60 -ContentType 'application/json' -UseBasicParsing
              Write-Output "Deleting release bundle..."
              jfrog config add distribution --overwrite --insecure-tls=$no_verify_ssl --distribution-url $int_s_distribution_url --user $int_s_distribution_user --password $int_s_distribution_apikey --interactive=false
              jfrog config use distribution
              jfrog ds release-bundle-delete --delete-from-dist=true --insecure-tls=$no_verify_ssl $releaseBundleName $releaseBundleVersion
              jfrog config remove distribution
              Write-Output "Checking resources..."
              Write-Output $releaseBundle.release_notes
              if ( $releaseBundle.release_notes.syntax -ne "markdown" ) { throw "Wrong syntax" }
              if ( $releaseBundle.release_notes.content -ne "My *Release Notes*" ) { throw "Wrong content" }
